// Generated by view binder compiler. Do not edit!
package com.example.condoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.condoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView passwordLbl;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView userLbl;

  @NonNull
  public final EditText username;

  private FragmentLoginBinding(@NonNull RelativeLayout rootView, @NonNull Button loginBtn,
      @NonNull EditText password, @NonNull TextView passwordLbl, @NonNull TextView textView2,
      @NonNull TextView userLbl, @NonNull EditText username) {
    this.rootView = rootView;
    this.loginBtn = loginBtn;
    this.password = password;
    this.passwordLbl = passwordLbl;
    this.textView2 = textView2;
    this.userLbl = userLbl;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_btn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_lbl;
      TextView passwordLbl = ViewBindings.findChildViewById(rootView, id);
      if (passwordLbl == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.user_lbl;
      TextView userLbl = ViewBindings.findChildViewById(rootView, id);
      if (userLbl == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new FragmentLoginBinding((RelativeLayout) rootView, loginBtn, password, passwordLbl,
          textView2, userLbl, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

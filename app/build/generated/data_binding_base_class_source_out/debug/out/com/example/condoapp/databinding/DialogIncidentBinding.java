// Generated by view binder compiler. Do not edit!
package com.example.condoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.condoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogIncidentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView announcementActivityHeader;

  @NonNull
  public final TextView announcementActivityMessage;

  @NonNull
  public final EditText editTextTextPersonName;

  @NonNull
  public final EditText editTextTextPersonName1;

  @NonNull
  public final Button submitBtnCreateIncidentReport;

  @NonNull
  public final TextView textView5;

  private DialogIncidentBinding(@NonNull LinearLayout rootView,
      @NonNull TextView announcementActivityHeader, @NonNull TextView announcementActivityMessage,
      @NonNull EditText editTextTextPersonName, @NonNull EditText editTextTextPersonName1,
      @NonNull Button submitBtnCreateIncidentReport, @NonNull TextView textView5) {
    this.rootView = rootView;
    this.announcementActivityHeader = announcementActivityHeader;
    this.announcementActivityMessage = announcementActivityMessage;
    this.editTextTextPersonName = editTextTextPersonName;
    this.editTextTextPersonName1 = editTextTextPersonName1;
    this.submitBtnCreateIncidentReport = submitBtnCreateIncidentReport;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogIncidentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogIncidentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_incident, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogIncidentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.announcement_activity_header;
      TextView announcementActivityHeader = ViewBindings.findChildViewById(rootView, id);
      if (announcementActivityHeader == null) {
        break missingId;
      }

      id = R.id.announcement_activity_message;
      TextView announcementActivityMessage = ViewBindings.findChildViewById(rootView, id);
      if (announcementActivityMessage == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName;
      EditText editTextTextPersonName = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName1;
      EditText editTextTextPersonName1 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName1 == null) {
        break missingId;
      }

      id = R.id.submit_btn_create_incident_report;
      Button submitBtnCreateIncidentReport = ViewBindings.findChildViewById(rootView, id);
      if (submitBtnCreateIncidentReport == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new DialogIncidentBinding((LinearLayout) rootView, announcementActivityHeader,
          announcementActivityMessage, editTextTextPersonName, editTextTextPersonName1,
          submitBtnCreateIncidentReport, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

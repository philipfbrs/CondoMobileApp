// Generated by view binder compiler. Do not edit!
package com.example.condoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.condoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnnouncementBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button announcementActivityBack;

  @NonNull
  public final TextView announcementActivityDate;

  @NonNull
  public final TextView announcementActivityHeader;

  @NonNull
  public final TextView announcementActivityMessage;

  private ActivityAnnouncementBinding(@NonNull LinearLayout rootView,
      @NonNull Button announcementActivityBack, @NonNull TextView announcementActivityDate,
      @NonNull TextView announcementActivityHeader, @NonNull TextView announcementActivityMessage) {
    this.rootView = rootView;
    this.announcementActivityBack = announcementActivityBack;
    this.announcementActivityDate = announcementActivityDate;
    this.announcementActivityHeader = announcementActivityHeader;
    this.announcementActivityMessage = announcementActivityMessage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnnouncementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnnouncementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_announcement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnnouncementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.announcement_activity_back;
      Button announcementActivityBack = ViewBindings.findChildViewById(rootView, id);
      if (announcementActivityBack == null) {
        break missingId;
      }

      id = R.id.announcement_activity_date;
      TextView announcementActivityDate = ViewBindings.findChildViewById(rootView, id);
      if (announcementActivityDate == null) {
        break missingId;
      }

      id = R.id.announcement_activity_header;
      TextView announcementActivityHeader = ViewBindings.findChildViewById(rootView, id);
      if (announcementActivityHeader == null) {
        break missingId;
      }

      id = R.id.announcement_activity_message;
      TextView announcementActivityMessage = ViewBindings.findChildViewById(rootView, id);
      if (announcementActivityMessage == null) {
        break missingId;
      }

      return new ActivityAnnouncementBinding((LinearLayout) rootView, announcementActivityBack,
          announcementActivityDate, announcementActivityHeader, announcementActivityMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
